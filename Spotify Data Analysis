/// Here I downloaded Spotify data from Kaggle and created a table and inserted the data from excel.
I then performed analytics on the data. ///

/// First, I created the table ///

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

/// Then I answered probable questions that could arise concerning the data. ///

/* what is the average length in minutes of song on this list? */

select avg(duration_ms)/(1000*60) as avg_min from BIT_DB.Spotifydata;

/* How dancable is the most popular song? */

select max(popularity), danceability from BIT_DB.Spotifydata order by popularity limit 1;

/* What is the average popularity, danceability, and energy of these songs? */

select avg(popularity), avg(danceability), avg(energy) from BIT_DB.Spotifydata;

/* who has the least popular song on the list and what is the song? */

select artist_name, track_name
from BIT_DB.Spotifydata
order by popularity asc
LIMIT 1

/* what is the average popularity of the top ten artists (according to popularity)? */

With avg_artist_pop_CTE as 
(select s.artist_name, avg(s.popularity) as avg_popularity
from spotifydata s
group by s.artist_name)

select artist_name, avg_popularity, 'Top Star' as Tag
from avg_artist_pop_CTE
where avg_popularity >= 90
order by artist_name;
